
Release Notes for AI Behaviors Made Easy


=====================================================
Version 1.3.7
=====================================================

Fixes:
-----------

Added a null check to make sure there's an animation state to send to the animation callback.
Added the public keyword to the CodeSampleGUI since you need a method to be public in order to use it.
Fixed a bug where the "Distance To Target Threshold" for the seek state wasn't being calculated.
Put DestroyImmediate in edit mode and Destroy when the game is playing for the idle state.
Dead state now passes the AI's transform instead of its' position so that it won't rotate.
Fixed a NaN rotation error if the Time.deltaTime value was zero.
Fixed a Null Reference Exception in the PatrolState if Init is called before Awake.
Fixed an issue where the agent would rotate toward the player even when in something like the seek state


Improvements:
-----------

Added the scripts from the Unity Example Mecanim scenes and made slight modifications to work with AI Behaviors.
Added damageMultiplier to the AIBehaviors class so when the GotHit method is called it can take the raw damage value and increase or decrease it.
Added an overrideable "CanGetHit" method to the GotHit state to see if it can be changed to. This only applies when calling "GotHit" on the main AIBehaviors script.
Added pitch and optional pitch randomness to the audio when played.
Added a previousState field to the main AIBehaviors script.


Changes:
-----------

Made the AIBehaviors generic GetState and GetStates methods return derived types instead of just the exact type.
Can now use an external move delegate in 'addition to' the NavMeshAgent and not 'instead of'.
The Defend state now locks the player into position when it is running.
Added SendMessageOptions.DontRequireReceiver to the GetHelpState "OnGetHelp" callback.


=====================================================
Version 1.3.6
=====================================================

Fixes:
-----------

Fixed a null reference bug when a nav mesh agent is not present in the GotHit method.

Fixed a bug where triggers were not being deleted when a state was deleted.


Changes:
-----------

Removed Legacy Upgrade system


=====================================================
Version 1.3.5
=====================================================

Features:
-----------

Now includes a very basic AI vs AI scene

Added a SetPatrolPoints method to the Patrol state in the form of void SetPatrolPoints(Transform pointsParent)


Improvements:
-----------

Exposed health to the inspector

Added a Change To Tag state

Now, no logic will execute if the time scale is 0


Changes:
-----------

Low Health Trigger now triggers if health is Less Than or Equal to instead of just Less Than
- most of the time it's used for detecting if the AI died, so naturally a person will probably want to put 0 and not 1

Added a movement call to the GotHit state for the AI to move to its' current position, effectively stopping it



=====================================================
Version 1.3.1
=====================================================

Fixes:
-----------

Now creates GUI Styles in the OnEnable method instead of in the declaration since it breaks the GUI in Unity 4

Fixed a bug where the AI wouldn't rotate when using a 3rd Party nav system



=====================================================
Version 1.3
=====================================================

Features:
-----------

Added an all new, easily expandable system where a developer can add new states and triggers easily.

Added an advanced mode so a user can have a basic view or an advanced view while editting.

Added the ability to have multiple instances of any state type.

The current state for the AI is now hilighted green in the editor.

Added a new SpeedExceeded trigger.

Added a new GoToRandomState trigger.

Added KeyUp and KeyDown triggers.


Improvements:
-----------

Added up, down, add and remove button styles.

Added reordering and removal of states.

Added a plus button to add new states to an AI.

Triggers are now seperate classes instead of being embedded into the BaseState class.

Added an InspectorHelper code file that new states and triggers will use by default when creating a new state or trigger from its' skeleton class, respectively.

Updated the GetHelpState to use the other AI's y position for pathfinding.

Implemented generic and type based GetState(s) methods.

Added spacing to make drawing the triggers look better.

Added a new property to the SeekState, destroyTargetWhenReached which will destroy the target that the fsm is seeking when it is reached.

Added ChangeActiveStateByIndex and ChangeActiveStateByName methods.


Bugs Fixes:
-----------

Fixed a bug in the Timer Trigger where it was always returning true.

Updated the vision cone to react and draw properly. It used to be twice the size that it should have been.

Fixed a potential bug that could occur when calling ChangeState if the state passed was null.

The IdleState now has the ai correctly rotated in the direction they entered the idle state in.

Updated the Ranged Attack scene as it wasn't working properly before.


Changes:
-----------

Set the default value of the cooldown time to be 0.

Got rid of the intermediate class StateMachineData.

RangedAttackState and MeleeAttackState are now just instances of AttackState (Do Not Use the RangedAttackState or MeleeAttackState components as they will be removed in a future release).

HealState and SeekAmmoState are now instances of SeekState (Do Not Use the HealState or SeekAmmoState components as they will be removed in a future release).

Renamed SetStates to ReplaceAllStates.

Removed the State enumeration as it's now mostly useless.

Removed a lot of unused code and variables.



=====================================================
Version 1.2.1
=====================================================


Features:
-----------

Added the ability to implement 3rd party path finding systems.

Updated menu to have a non Nav Mesh setup option in case the user decides to use a 3rd party system. Labeled as "AI Behaviors Setup (No Nav Mesh Agent)".



Improvements:
-----------

Removed the use of System.Reflection from the runtime code to allow for code stripping on mobile devices.

Renamed the general property "Raycast Layers" to "Visual Obstruction Layers" and added a tooltip for it because it was confusing.

Updated the GUI layout of the FleeState fleeTargetTag to be more consistent with the rest of the layout.

Made getting the current state public.



Bugs Fixes:
-----------

Fixed a bug where the animation from the attack slider in the editor would cause the animations to jitter if the attack state was selected.

Fixed the Patrol state's Ping Pong mode since it wasn't working.

Fixed a bug where the attack states weren't using the attack point variable.



Changes:
-----------

Changed SeekItemsState to be called SeekStateBase and made it abstract.

There is no more health field component selection since it was using System.Reflection in the runtime.

Removed Character Stats script since it's no longer needed.
